version: '3.8'

services:
  redis_db:
    extends:
      file: ./services/docker-compose-redis.yml
      service: redis_db

  db:
    extends:
      file: ./services/docker-compose-db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis_db
    extends:
      file: ./services/docker-compose-backend.yml
      service: backend
    links:
      - db:postgres
      - redis_db:redis_db
    volumes:
      - ./logs/:/app/logs/
      - ./allocs/genesis-testnet-geth.json:/app/genesis-geth.json
    environment:
      ETHEREUM_JSONRPC_HTTP_URL: ${ETHEREUM_JSONRPC_HTTP_URL:-https://testrpc.amazechain.com}
      ETHEREUM_JSONRPC_WS_URL: ${ETHEREUM_JSONRPC_WS_URL:-wss://testws.amazechain.com}
      ETHEREUM_JSONRPC_TRACE_URL: ${ETHEREUM_JSONRPC_TRACE_URL:-https://testrpc.amazechain.com}
      INDEXER_AMC_BEIJING_BLOCK: ${INDEXER_AMC_BEIJING_BLOCK:-40000}


  smart-contract-verifier:
    extends:
      file: ./services/docker-compose-smart-contract-verifier.yml
      service: smart-contract-verifier

  # visualizer:
  #   extends:
  #     file: ./services/docker-compose-visualizer.yml
  #     service: visualizer

  # sig-provider:
  #   extends:
  #     file: ./services/docker-compose-sig-provider.yml
  #     service: sig-provider

  frontend:
    extends:
      file: ./services/docker-compose-frontend.yml
      service: frontend
    environment:
      NEXT_PUBLIC_API_HOST: ${NEXT_PUBLIC_API_HOST:-testnet.amazechain.com}
      NEXT_PUBLIC_API_PROTOCOL: ${NEXT_PUBLIC_API_PROTOCOL:-https}
      NEXT_PUBLIC_APP_HOST: ${NEXT_PUBLIC_APP_HOST:-testnet.amazechain.com}
      NEXT_PUBLIC_APP_PROTOCOL: ${NEXT_PUBLIC_APP_PROTOCOL:-https}
      NEXT_PUBLIC_API_WEBSOCKET_PROTOCOL: ${NEXT_PUBLIC_API_WEBSOCKET_PROTOCOL:-wss}
      NEXT_PUBLIC_NETWORK_ID: ${NEXT_PUBLIC_NETWORK_ID:-100100100}

  proxy:
    depends_on:
      - backend
      - frontend
    extends:
      file: ./services/docker-compose-nginx.yml
      service: proxy
    environment:
      BACK_PROXY_PASS: ${BACK_PROXY_PASS:-http://backend:4000}
      FRONT_PROXY_PASS: ${FRONT_PROXY_PASS:-http://frontend:3000}
      PROXY_PASS_HOST: ${PROXY_PASS_HOST:-testnet.amazechain.com}
    ports:
      - 4010:80

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local
